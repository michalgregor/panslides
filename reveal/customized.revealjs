<!DOCTYPE html>
<html$if(lang)$ lang="$lang$"$endif$$if(dir)$ dir="$dir$"$endif$>
<head>
  <meta charset="utf-8">
  <meta name="generator" content="pandoc">
$for(author-meta)$
  <meta name="author" content="$author-meta$">
$endfor$
$if(date-meta)$
  <meta name="dcterms.date" content="$date-meta$">
$endif$
$if(keywords)$
  <meta name="keywords" content="$for(keywords)$$keywords$$sep$, $endfor$">
$endif$
  <title>$if(title-prefix)$$title-prefix$ â€“ $endif$$pagetitle$</title>
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no, minimal-ui">
  <link rel="stylesheet" href="$revealjs-url$/css/reset.css">
  <link rel="stylesheet" href="$revealjs-url$/css/reveal.css">
  <style>
    $styles.html()$
  </style>
$if(plotly)$
  <script src="$revealjs-url$/../plotly/plotly.js" charset="utf-8"></script>
$endif$
$if(customtheme)$
  <link rel="stylesheet" href="$customtheme$" id="theme">
$else$
  $if(theme)$
  <link rel="stylesheet" href="$revealjs-url$/css/theme/$theme$.css" id="theme">
  $else$
  <link rel="stylesheet" href="$revealjs-url$/css/theme/black.css" id="theme">
  $endif$
$endif$
$for(css)$
  <link rel="stylesheet" href="$css$"/>
$endfor$
  <!-- Printing and PDF exports -->
  <script>
    var link = document.createElement( 'link' );
    link.rel = 'stylesheet';
    link.type = 'text/css';
    link.href = window.location.search.match( /print-pdf/gi ) ? '$revealjs-url$/css/print/pdf.css' : '$revealjs-url$/css/print/paper.css';
    document.getElementsByTagName( 'head' )[0].appendChild( link );

    function updateURLParameter(url, param, paramVal) {
        var TheAnchor = null;
        var newAdditionalURL = "";
        var tempArray = url.split("?");
        var baseURL = tempArray[0];
        var additionalURL = tempArray[1];
        var temp = "";

        if (additionalURL) {
            var tmpAnchor = additionalURL.split("#");
            var TheParams = tmpAnchor[0];
                TheAnchor = tmpAnchor[1];
            if(TheAnchor)
                additionalURL = TheParams;

            tempArray = additionalURL.split("&");

            for (var i=0; i<tempArray.length; i++)
            {
                if(tempArray[i].split('=')[0] != param)
                {
                    newAdditionalURL += temp + tempArray[i];
                    temp = "&";
                }
            }        
        }
        else {
            var tmpAnchor = baseURL.split("#");
            var TheParams = tmpAnchor[0];
                TheAnchor  = tmpAnchor[1];

            if(TheParams)
                baseURL = TheParams;
        }

        if(TheAnchor)
            paramVal += "#" + TheAnchor;

        var rows_txt = temp + "" + param + "=" + paramVal;
        return baseURL + "?" + newAdditionalURL + rows_txt;
    }
  </script>
  <!--[if lt IE 9]>
  <script src="$revealjs-url$/lib/js/html5shiv.js"></script>
  <![endif]-->
$if(math)$
  $math$
$endif$
$for(header-includes)$
  $header-includes$
$endfor$
</head>
<body>
$for(include-before)$
$include-before$
$endfor$
  <div class="reveal">
    <div class="slides">
$if(nofrontslide)$
$else$
$if(title)$
<section class="frontslide slide" id="$idprefix$title-slide"$for(title-slide-attributes/pairs)$ $it.key$="$it.value$"$endfor$>
  <h1 class="title $title-classes$">$title$</h1>
$if(subtitle)$
  <span class="subtitle">$subtitle$</span>
$endif$
<div class="columns">
<div class="column intro-left-column">
<div class="intro-left-column-inner">
$for(author)$
    <div class="author">
    $if(author.name)$
        <div class="author-name">$author.name$</div>
        $if(author.email)$
            <div class="author-email">$author.email$</div>
        $endif$
        $if(author.affiliation)$
            <div class="author-affiliation">$author.affiliation$</div>
        $endif$
    $else$
        $author$
    $endif$
    </div>
$endfor$
$if(date)$
  <div class="date">$date$</div>
$endif$
$if(intro-left)$
  <div class="intro-left">$intro-left$</div>
$endif$
</div>
</div><div class="column intro-right-column">
$if(intro-right)$
    <div class="intro-right-column-inner">$intro-right$</div>
$endif$
</div>
</div>
</section>
$endif$
$endif$
$if(toc)$
<section id="$idprefix$TOC">
$table-of-contents$
</section>
$endif$

$body$
    </div>
  </div>

  <script src="$revealjs-url$/js/reveal.js"></script>

  <script>

      // Full list of configuration options available at:
      // https://github.com/hakimel/reveal.js#configuration
      Reveal.initialize({
$if(controls)$
        // Display controls in the bottom right corner
        controls: $controls$,
$endif$
$if(progress)$
        // Display a presentation progress bar
        progress: $progress$,
$endif$
$if(slideNumber)$
        // Display the page number of the current slide
        slideNumber: '$slideNumber$',
$endif$
        // Push each slide change to the browser history
$if(history)$
        history: $history$,
$else$
        history: true,
$endif$
$if(keyboard)$
        // Enable keyboard shortcuts for navigation
        keyboard: $keyboard$,
$endif$
$if(overview)$
        // Enable the slide overview mode
        overview: $overview$,
$endif$
$if(center)$
        // Vertical centering of slides
        center: $center$,
$endif$
$if(touch)$
        // Enables touch navigation on devices with touch input
        touch: $touch$,
$endif$
$if(loop)$
        // Loop the presentation
        loop: $loop$,
$endif$
$if(rtl)$
        // Change the presentation direction to be RTL
        rtl: $rtl$,
$endif$
$if(navigationMode)$
        // see https://github.com/hakimel/reveal.js/#navigation-mode
        navigationMode: '$navigationMode$',
$endif$
$if(fragments)$
        // Turns fragments on and off globally
        fragments: $fragments$,
$endif$
$if(embedded)$
        // Flags if the presentation is running in an embedded mode,
        // i.e. contained within a limited portion of the screen
        embedded: $embedded$,
$endif$
$if(help)$
        // Flags if we should show a help overlay when the questionmark
        // key is pressed
        help: $help$,
$endif$
$if(showNotes)$
        // Flags if speaker notes should be visible to all viewers
        showNotes: $showNotes$,
$endif$
$if(autoSlide)$
        // Number of milliseconds between automatically proceeding to the
        // next slide, disabled when set to 0, this value can be overwritten
        // by using a data-autoslide attribute on your slides
        autoSlide: $autoSlide$,
$endif$
$if(autoSlideStoppable)$
        // Stop auto-sliding after user input
        autoSlideStoppable: $autoSlideStoppable$,
$endif$
$if(mouseWheel)$
        // Enable slide navigation via mouse wheel
        mouseWheel: $mouseWheel$,
$endif$
$if(rollingLinks)$
        // Apply a 3D roll to links on hover
        rollingLinks: $rollingLinks$,
$endif$
$if(hideAddressBar)$
        // Hides the address bar on mobile devices
        hideAddressBar: $hideAddressBar$,
$endif$
$if(previewLinks)$
        // Opens links in an iframe preview overlay
        previewLinks: $previewLinks$,
$endif$
$if(transition)$
        // Transition style
        transition: '$transition$', // none/fade/slide/convex/concave/zoom
$endif$
$if(transitionSpeed)$
        // Transition speed
        transitionSpeed: '$transitionSpeed$', // default/fast/slow
$endif$
$if(backgroundTransition)$
        // Transition style for full page slide backgrounds
        backgroundTransition: '$backgroundTransition$', // none/fade/slide/convex/concave/zoom
$endif$
$if(viewDistance)$
        // Number of slides away from the current that are visible
        viewDistance: $viewDistance$,
$endif$
$if(parallaxBackgroundImage)$
        // Parallax background image
        parallaxBackgroundImage: '$parallaxBackgroundImage$', // e.g. "'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'"
$else$
$if(background-image)$
       // Parallax background image
       parallaxBackgroundImage: '$background-image$', // e.g. "'https://s3.amazonaws.com/hakim-static/reveal-js/reveal-parallax-1.jpg'"
$endif$
$endif$
$if(parallaxBackgroundSize)$
        // Parallax background size
        parallaxBackgroundSize: '$parallaxBackgroundSize$', // CSS syntax, e.g. "2100px 900px"
$endif$
$if(parallaxBackgroundHorizontal)$
        // Amount to move parallax background (horizontal and vertical) on slide change
        // Number, e.g. 100
        parallaxBackgroundHorizontal: $parallaxBackgroundHorizontal$,
$endif$
$if(parallaxBackgroundVertical)$
        parallaxBackgroundVertical: $parallaxBackgroundVertical$,
$endif$
$if(width)$
        // The "normal" size of the presentation, aspect ratio will be preserved
        // when the presentation is scaled to fit different resolutions. Can be
        // specified using percentage units.
        width: $width$,
$else$
        width: 960,
$endif$
$if(height)$
        height: $height$,
$else$
        height: 700,
$endif$
$if(margin)$
        // Factor of the display size that should remain empty around the content
        margin: $margin$,
$endif$
$if(minScale)$
        // Bounds for smallest/largest possible scale to apply to content
        minScale: $minScale$,
$endif$
$if(maxScale)$
        maxScale: $maxScale$,
$endif$
$if(zoomKey)$
        // Modifier key used to click-zoom to part of the slide
        zoomKey: '$zoomKey$',
$endif$
$if(mathjax)$
        math: {
          mathjax: '$mathjaxurl$',
          config: 'TeX-AMS_HTML-full',
          tex2jax: {
            inlineMath: [['\\(','\\)']],
            displayMath: [['\\[','\\]']],
            balanceBraces: true,
            processEscapes: false,
            processRefs: true,
            processEnvironments: true,
            preview: 'TeX',
            skipTags: ['script','noscript','style','textarea','pre','code'],
            ignoreClass: 'tex2jax_ignore',
            processClass: 'tex2jax_process'
          },
        },
$endif$
$if(nomenu)$
$else$
        menu: {
          custom: [{
            title: 'Printouts', icon: '<i class="fa fa-file-pdf">',
            content: '<ul class="slide-menu-items"><li class="slide-menu-item"><a class="slide-menu-item-title" onclick="window.location.assign(updateURLParameter(window.location.href, \'print-pdf\', \'\'));">Printout w/o notes</a></li><li class="slide-menu-item"><a class="slide-menu-item-title" onclick="window.location.assign(updateURLParameter(updateURLParameter(window.location.href, \'print-pdf\', \'\'), \'showNotes\', \'separate-page\'));">Printout w/ notes</a></li></ul>'
          }]
        },
$endif$
$if(langs)$
        langs: {
            langs: '$langs$'    
        },
$endif$
$if(noremapkeys)$
$else$
        keyboard: {
            39: function(event) {
                if(event.shiftKey || Reveal.isOverview()) Reveal.navigateRight();
                else Reveal.navigateNext();
            }, // Right Arrow
            37: function(event) {
                if(event.shiftKey || Reveal.isOverview()) Reveal.navigateLeft();
                else Reveal.navigatePrev();
            },  // Left Arrow
            78: function(event) {
                if(Reveal.isOverview()) Reveal.navigateNext();
                else Reveal.navigateRight();
            }, // n key
            80: function(event) {
                if(Reveal.isOverview()) Reveal.navigatePrev();
                else Reveal.navigateLeft();
            } // p key
        },
$endif$
        // Optional reveal.js plugins
        dependencies: [
          { src: '$revealjs-url$/lib/js/classList.js', condition: function() { return !document.body.classList; } },
          { src: '$revealjs-url$/plugin/zoom-js/zoom.js', async: true },
$if(notes-server)$
          { src: '$revealjs-url$/socket.io/socket.io.js', async: true },
          { src: '$revealjs-url$/plugin/notes-server/client.js', async: true },
$endif$
$if(mathjax)$
          { src: '$revealjs-url$/plugin/math/math.js', async: true },
$endif$
          { src: '$revealjs-url$/plugin/notes/notes.js', async: true },
$if(nomenu)$
$else$
          { src: '$revealjs-url$/plugin/menu/menu.js', async: true },
$endif$
$if(langs)$
          { src: '$revealjs-url$/../lecture_js_plugins/langs/langs.js', async: true },
$endif$
$if(nooverlays)$
$else$
          { src: '$revealjs-url$/../lecture_js_plugins/overlays/overlays.js', async: false },
$endif$
$if(noscroll)$
$else$
          { src: '$revealjs-url$/../lecture_js_plugins/scrollable_slides/scrollable_slides.js', async: false },
$endif$
$if(nostylingcommands)$
$else$
          { src: '$revealjs-url$/../lecture_js_plugins/styling_commands/styling_commands.js', async: false },
$endif$
$if(nopltanim)$
$else$
          { src: '$revealjs-url$/../lecture_js_plugins/plt_anim/plt_anim.js', async: false },
$endif$
        ]
      });
    </script>
  $for(include-after)$
  $include-after$
  $endfor$
  </body>
</html>
